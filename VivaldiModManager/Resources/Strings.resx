<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="AboutMessage" xml:space="preserve">
    <value>Vivaldi Mod Manager is a simple tool for including your modifications in Vivaldi Web Browser.</value>
  </data>
  <data name="AddFromFile" xml:space="preserve">
    <value>_Add From File</value>
  </data>
  <data name="AddVersion" xml:space="preserve">
    <value>Add _Version</value>
  </data>
  <data name="AddVersionTooltip" xml:space="preserve">
    <value>Add Vivaldi version from version directory</value>
  </data>
  <data name="AlreadyRunning" xml:space="preserve">
    <value>Application is already running</value>
  </data>
  <data name="Backup" xml:space="preserve">
    <value>_Backup</value>
  </data>
  <data name="CantChangeRequireAdmin" xml:space="preserve">
    <value>Unable to change this!
Please run this tool as administrator.</value>
  </data>
  <data name="CantFindVivaldi" xml:space="preserve">
    <value>Can't find Vivaldi</value>
  </data>
  <data name="CantFindVivaldiMessage" xml:space="preserve">
    <value>Unable to find any Vivaldi installations!
Please add them manually using plus button. You need to add folder which name represents your Vivaldi version, something like:
"C:\Program Files\Vivaldi\Application\&lt;version&gt;"</value>
  </data>
  <data name="CantStartMigration" xml:space="preserve">
    <value>Can't start migration</value>
  </data>
  <data name="CantStartMigrationNoSelection" xml:space="preserve">
    <value>Please select Vivaldi versions for migration process.</value>
  </data>
  <data name="CantStartMigrationSameVersions" xml:space="preserve">
    <value>You selected same Vivaldi version</value>
  </data>
  <data name="CleanTarget" xml:space="preserve">
    <value>Clear Target</value>
  </data>
  <data name="Copy" xml:space="preserve">
    <value>Copy</value>
  </data>
  <data name="Cut" xml:space="preserve">
    <value>Cut</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="DeletePreviousVersionMigration" xml:space="preserve">
    <value>Delete source version</value>
  </data>
  <data name="Destination" xml:space="preserve">
    <value>Destination:</value>
  </data>
  <data name="DisableAll" xml:space="preserve">
    <value>_Disable All</value>
  </data>
  <data name="EditMod" xml:space="preserve">
    <value>Edit Mod</value>
  </data>
  <data name="EnableAll" xml:space="preserve">
    <value>_Enable All</value>
  </data>
  <data name="English" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="EnterFileName" xml:space="preserve">
    <value>Enter file name</value>
  </data>
  <data name="EnterFilenameHere" xml:space="preserve">
    <value>Enter file name here...</value>
  </data>
  <data name="Exit" xml:space="preserve">
    <value>E_xit</value>
  </data>
  <data name="ExtractMod" xml:space="preserve">
    <value>Extract Mod</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="Links" xml:space="preserve">
    <value>_Links</value>
  </data>
  <data name="Menu" xml:space="preserve">
    <value>Menu</value>
  </data>
  <data name="Migrate" xml:space="preserve">
    <value>Migrate</value>
  </data>
  <data name="MigrationTool" xml:space="preserve">
    <value>_Migration Tool</value>
  </data>
  <data name="MigrationToolTitle" xml:space="preserve">
    <value>Migration Tool</value>
  </data>
  <data name="ModExtension" xml:space="preserve">
    <value>Mod Type</value>
  </data>
  <data name="ModFileName" xml:space="preserve">
    <value>Mod File Name</value>
  </data>
  <data name="ModManagerOnGitlab" xml:space="preserve">
    <value>Mod Manager on GitLab</value>
  </data>
  <data name="NewMod" xml:space="preserve">
    <value>_New Mod</value>
  </data>
  <data name="Paste" xml:space="preserve">
    <value>Paste</value>
  </data>
  <data name="Redo" xml:space="preserve">
    <value>Redo</value>
  </data>
  <data name="RemoveMod" xml:space="preserve">
    <value>Remove Mod</value>
  </data>
  <data name="RemoveVersion" xml:space="preserve">
    <value>Remove Ver_sion</value>
  </data>
  <data name="RemoveVersionTooltip" xml:space="preserve">
    <value>Remove Vivaldi version from versions list</value>
  </data>
  <data name="Restore" xml:space="preserve">
    <value>_Restore</value>
  </data>
  <data name="Russian" xml:space="preserve">
    <value>Russian</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="SaveAndClose" xml:space="preserve">
    <value>Save and Close</value>
  </data>
  <data name="Scripts" xml:space="preserve">
    <value>Scripts</value>
  </data>
  <data name="ShowLineNumbers" xml:space="preserve">
    <value>Show Lines Numbers</value>
  </data>
  <data name="Source" xml:space="preserve">
    <value>Source:</value>
  </data>
  <data name="Styles" xml:space="preserve">
    <value>Styles</value>
  </data>
  <data name="Undo" xml:space="preserve">
    <value>Undo</value>
  </data>
  <data name="Versions" xml:space="preserve">
    <value>Versions</value>
  </data>
  <data name="VersionWasDeleted" xml:space="preserve">
    <value>Oops, looks like this version was deleted.</value>
  </data>
  <data name="VivaldiCommunity" xml:space="preserve">
    <value>Vivaldi Community</value>
  </data>
  <data name="VivaldiHelp" xml:space="preserve">
    <value>Vivaldi Help</value>
  </data>
  <data name="VivaldiHomepage" xml:space="preserve">
    <value>Vivaldi Homepage</value>
  </data>
  <data name="VivaldiMods" xml:space="preserve">
    <value>Mods for Vivaldi</value>
  </data>
  <data name="VivaldiSnapshots" xml:space="preserve">
    <value>Vivaldi Snapshots</value>
  </data>
  <data name="VivaldiVersion" xml:space="preserve">
    <value>Vivaldi Version</value>
  </data>
  <data name="Warning" xml:space="preserve">
    <value>Warning</value>
  </data>
  <data name="WordWrap" xml:space="preserve">
    <value>Word Wrap</value>
  </data>
</root>